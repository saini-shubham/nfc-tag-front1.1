{"version":3,"sources":["store/tagSlice.js","assets/images/users/user1.jpg","assets/images/users/user2.jpg","assets/images/users/user3.jpg","assets/images/users/user4.jpg","assets/images/users/user5.jpg","components/ComponentCard2.js","components/TagRegister.js","components/ScanDone.js","components/dashboard/ProjectTable.js","components/ComponentCard.js","services/tagServices.js","services/common.js","views/UserDetails.js","views/TagDetails.js","services/userServices.js","components/CreateUser.js","components/UserListDetails.js","components/Login.js","components/TagDetailsList.js","components/GetPdf.js","components/RegisteredTagsDetails.js","components/ScanQr.js","routes/Router.js","App.js","reportWebVitals.js","layouts/loader/Loader.js","store/index.js","index.js"],"names":["tagSlice","createSlice","name","initialState","tagId","tagScanStatus","tagListRequiredDetails","reducers","setTagId","state","action","payload","setTagScanStatus","setTagDetailsRequiredDetails","tagAction","actions","ComponentCard2","children","subtitle","title","className","TagRegister","props","navigate","useNavigate","useDispatch","useParams","userId","getUserId","useState","houseNo","phoneNo","locality","city","pincode","formData","setFormData","handleChange","event","target","value","console","log","prevFormData","onSubmit","preventDefault","tagServices","tagRegister","then","res","Swal","fire","icon","data","message","catch","err","response","text","container","spacing","item","xs","label","variant","fullWidth","onChange","required","type","color","ScanDone","useEffect","scanTag","error","tableData","avatar","user1","email","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","tag","responsive","borderless","map","tdata","index","ComponentCard","header","headers","accept","token","getAuthToken","base_url","body","axios","post","get","getTagStatusCompleteDetails","getAllRegiteredTagsInACity","cityName","getTagStatusForVisitor","deleteTagById","id","delete","getPdf","sessionStorage","getItem","getUserType","UserDetails","sm","lg","onClick","TagDetails","dispatch","dayjs","selectedDate","setSelectedDate","setCity","citChangeHandler","e","Grid","FormControl","sx","marginBottom","minWidth","InputLabel","Select","labelId","autoWidth","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","date","renderInput","TextField","disableFuture","shouldDisableDate","nDate","Date","pastDate","setDate","getDate","toLocaleDateString","formattedDate","format","cities","CreateUser","setName","adhaarNumber","setAadhaarNumber","firmName","setFirmName","selectedCities","setSelectedCities","phoneNumber","setPhoneNumber","userType","setUserType","userServices","password","multiple","renderValue","selected","join","Button","UserListDetails","userDetails","setUserDetails","IconButton","alert","Login","setEmail","setPassword","errors","setErrors","onLogin","useCallback","details","fetch","method","JSON","stringify","json","setItem","Container","maxWidth","formIsValid","newErrors","validateForm","Typography","align","gutterBottom","helperText","TagDetailsList","StyleSheet","create","heading","fontSize","textAlign","marginTop","table","display","width","marginLeft","marginRight","borderStyle","borderWidth","tableRow","margin","flexDirection","tableCol","tableCell","setTableData","useSelector","tagDetails","currentDate","getMonth","getFullYear","useRef","scanned","time","disabled","RegisteredTagsDetails","params","registryDateTime","split","_id","ScanQr","startScan","setStartScan","loadingScan","setLoadingScan","show","setShow","handleScan","scanData","Modal","onHide","size","scrollable","Header","closeButton","Title","Body","facingMode","delay","onError","onScan","FullLayout","lazy","Starter","About","ThemeRoutes","path","element","exact","App","routing","useRoutes","Themeroutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Loader","store","configureStore","reducer","tagReducer","ReactDOM","render","fallback","basename","document","getElementById"],"mappings":"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","file":"static/js/main.4298fdaa.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState ={tagId:\"\",tagScanStatus:false,tagListRequiredDetails:{}}\nconst tagSlice= createSlice({\n    name:\"tag\",\n    initialState,\n    reducers:{\n        setTagId(state,action){\n            state.tagId= action.payload;\n        },\n        setTagScanStatus(state,action){\n            state.tagScanStatus=action.payload\n        },\n        setTagDetailsRequiredDetails(state,action){\n            state.tagListRequiredDetails=action.payload\n        }\n    }\n\n})\n\nexport const tagAction=tagSlice.actions;\nexport default tagSlice.reducer;","export default __webpack_public_path__ + \"static/media/user1.f3714f33.jpg\";","export default __webpack_public_path__ + \"static/media/user2.ddd14b39.jpg\";","export default __webpack_public_path__ + \"static/media/user3.a57a5165.jpg\";","export default __webpack_public_path__ + \"static/media/user4.6ac95ef9.jpg\";","export default __webpack_public_path__ + \"static/media/user5.847ea5a9.jpg\";","import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst ComponentCard2 = ({ children, title, subtitle }) => {\n  return (\n    <Card>\n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard2.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node\n};\n\nexport default ComponentCard2;\n","import React, { useState } from \"react\";\nimport { TextField, Button, Grid, Typography } from \"@material-ui/core\";\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport ComponentCard from \"./ComponentCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport tagServices from \"../services/tagServices\";\nimport Swal from \"sweetalert2\";\n//import { common } from \"@material-ui/core/colors\";\nimport {getUserId} from '../services/common'\n\nconst TagRegister = (props) => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch();\n  const parmas = useParams();\n  // const[tagID,setTagId]=useState();\n  const tagId = parmas.tagId\n  const userId=  getUserId();\n  const [formData, setFormData] = useState({\n    tagId: tagId,\n    userId: userId,\n    name: \"\",\n    houseNo: \"\",\n    phoneNo: \"\",\n    locality: \"\",\n    city: \"\",\n    state: \"\",\n    pincode: \"0000000\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    console.log(name, value);\n    setFormData((prevFormData) => ({\n      ...prevFormData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault(); // Perform form submission or further processing here\n    //console.log(formData);\n    tagServices\n      .tagRegister(formData)\n      .then((res) => {\n        console.log(res);\n        Swal.fire({\n          icon: res.data.message === \"Already Registerd\" ? \"error\" : \"success\",\n          title: res.data.message,\n        });\n        setFormData({\n          tagId: \"\",\n          userId: \"\",\n          name: \"\",\n          houseNo: \"\",\n          phoneNo: \"\",\n          locality: \"\",\n          city: \"\",\n          state: \"\",\n          pincode: \"\",\n        });\n        navigate('/starter')\n        \n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Enter Correct Details\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <ComponentCard title=\"Form Details\">\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {/* <Grid item xs={6}>\n          <TextField\n            name=\"tagId\"\n            label=\"Tag ID\"\n            variant=\"outlined\"\n            fullWidth\n            value={formData.tagId}\n            onChange={handleChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            name=\"userId\"\n            label=\"User ID\"\n            variant=\"outlined\"\n            fullWidth\n            value={formData.userId}\n            onChange={handleChange}\n            required\n          />\n        </Grid> */}\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                label=\"Name\"\n                variant=\"outlined\"\n                fullWidth\n                value={formData.name}\n                onChange={handleChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"houseNo\"\n                label=\"House No\"\n                variant=\"outlined\"\n                fullWidth\n                value={formData.houseNo}\n                onChange={handleChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"phoneNo\"\n                label=\"Phone No\"\n                variant=\"outlined\"\n                fullWidth\n                value={formData.phoneNo}\n                onChange={handleChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"locality\"\n                label=\"Locality\"\n                variant=\"outlined\"\n                fullWidth\n                value={formData.locality}\n                onChange={handleChange}\n                required\n              />\n            </Grid>\n            <Grid item xs={6}>\n              \n              {/* <TextField\n            name=\"city\"\n            label=\"City\"\n            variant=\"outlined\"\n            fullWidth\n            value={formData.city}\n            onChange={handleChange}\n            required\n          /> */}\n              <FormControl fullWidth required>\n                <InputLabel fullWidth>City</InputLabel>\n                <Select\n                  name=\"city\"\n                  fullWidth\n                  value={formData.city}\n                  onChange={handleChange}\n                >\n                  <MenuItem value=\"Ellenabad\">Ellenabad</MenuItem>\n                  <MenuItem value=\"Hisar\">Hisar</MenuItem>\n                  <MenuItem value=\"Sirsa\">Sirsa</MenuItem>\n                  <MenuItem value=\"Delhi\">Delhi</MenuItem>\n                </Select>\n                <FormHelperText>Select your city</FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                name=\"state\"\n                label=\"State\"\n                variant=\"outlined\"\n                fullWidth\n                value={formData.state}\n                onChange={handleChange}\n              />\n            </Grid>\n            {/* <Grid item xs={6}>\n          <TextField\n            name=\"pincode\"\n            label=\"Pincode\"\n            variant=\"outlined\"\n            fullWidth\n            value={formData.pincode}\n            onChange={handleChange}\n          />\n        </Grid> */}\n            <Grid item xs={12}>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                           Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </ComponentCard>\n    </>\n  );\n};\n\nexport default TagRegister;\n","import { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ComponentCard from \"./ComponentCard\";\nimport tagServices from \"../services/tagServices\";\nimport Swal from \"sweetalert2\";\n\nconst ScanDone = () => {\n  //hit api and show messgae in model wether it's a success or not\n  const tagId = useParams();\n  const navigate = useNavigate();\n  const [show, setShow] = useState(true);\n  const [message, setMessage] = useState()\n  const handleClose = () => {\n    setShow(false);\n    navigate(\"/starter\");\n  };\n  useEffect(() => {\n    console.log(tagId);\n    tagServices\n      .scanTag(tagId.tagId)\n      .then((res) => {\n        console.log(res.data);\n        //setMessage(res.data.message)\n        if (res.data.message && res.data.message === \"Scanned Successfully\") {\n          Swal.fire({\n            icon:\n              res.data.message === \"Scanned Successfully\" ? \"success\" : \"info\",\n            title: res.data.message,\n            //text: res.data.message,\n          }).then(() => navigate(\"/starter\"))\n        }\n        else {\n          Swal.fire({\n            icon: \"info\",\n            title: res.data.error || res.data.message ,\n            //text: res.data.message,\n          }).then(() => navigate(\"/starter\"))\n        }\n\n      })\n      //.catch((err) => console.log(err));\n      .catch((err) =>\n        //console.log(err.response.data.error)\n        //setMessage(err.data.message)\n        Swal.fire({ icon: \"error\", title: err.response.data.error }).then(() => navigate(\"/starter\"))\n      );\n  }, []);\n\n  return (\n    <>\n      {/* <Modal show={show} onHide={handleClose} size=\"sm\" scrollable={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>Done</Modal.Title>\n        </Modal.Header>\n        <Modal.Body> */}\n      {/* <h2>{message}</h2> */}\n      {/* </Modal.Body> */}\n      {/* <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer> */}\n      {/* </Modal> */}\n    </>\n  );\n};\nexport default ScanDone;\n","import { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport user1 from \"../../assets/images/users/user1.jpg\";\nimport user2 from \"../../assets/images/users/user2.jpg\";\nimport user3 from \"../../assets/images/users/user3.jpg\";\nimport user4 from \"../../assets/images/users/user4.jpg\";\nimport user5 from \"../../assets/images/users/user5.jpg\";\n\nconst tableData = [\n  {\n    avatar: user1,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user2,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Lading pro React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user3,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Elite React\",\n    status: \"holt\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user4,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user5,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Ample React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n];\n\nconst ProjectTables = (props) => {\n  return (\n    <div>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\">RegisteredUser Listing</CardTitle>\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n            Overview of the projects\n          </CardSubtitle>\n\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n            <thead>\n              <tr>\n                <th>Team Lead</th>  \n                <th>Project</th>\n                <th>Status</th>\n                <th>Weeks</th>\n                <th>Weeks</th>\n                <th>Weeks</th>\n                <th>Budget</th>\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((tdata, index) => (\n                <tr key={index} className=\"border-top\">\n                  <td>\n                    <div className=\"d-flex align-items-center p-2\">\n                      {/* <img\n                        src={tdata.avatar}\n                        className=\"rounded-circle\"\n                        alt=\"avatar\"\n                        width=\"45\"\n                        height=\"45\"\n                      /> */}\n                      <div className=\"ms-3\">\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\n                        <span className=\"text-muted\">{tdata.email}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>{tdata.project}</td>\n                  <td>\n                    {tdata.status === \"pending\" ? (\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                    ) : tdata.status === \"holt\" ? (\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\n                    ) : (\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                    )}\n                  </td>\n                  <td>{tdata.weeks}</td>\n                  <td>{tdata.budget}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default ProjectTables;\n","import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nconst ComponentCard = ({ children, title, subtitle }) => {\n  return (\n    <Card>\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\n        {title}\n      </CardTitle>\n      <CardBody className=\"p-4\">\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\n        <div>{children}</div>\n      </CardBody>\n    </Card>\n  );\n};\n\nComponentCard.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  subtitle: PropTypes.node\n};\n\nexport default ComponentCard;\n","import axios from \"axios\";\nimport { getAuthToken } from \"./common\";\n\nconst token = getAuthToken();\n\nconst header = {  \n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n    token: token,\n  },\n};\n\nconst base_url = \"http://13.234.104.94\";\n//const base_url = \"https://nfc-backend-compass-5b3f.vercel.app\";\n//const base_url = \"https://accessservices.site\";\n\nconst tagRegister = (body) => {\n  return axios.post(base_url + \"/tagRegister\", body, header);\n};\n\nconst scanTag = (tagId) => {\n  return axios.get(base_url + \"/tags/\" + tagId, header);\n};\n\n//for visitor:  tag count by given city and date(default current date)\nconst getTagStatusForVisitor = (body) => {\n  return axios.post(base_url + \"/tags/count\", body, header);\n};\n\n///for admin || sAdmin: get all tags in a city\nconst getAllRegiteredTagsInACity = (cityName) => {\n  return axios.get(base_url + \"/tags/byCity/\" + cityName, header);\n};\n\n//for admin: tag status complete details for a given date and city\nconst getTagStatusCompleteDetails = (body) => {\n  return axios.post(base_url + \"/tagDetailsByCity\", body, header);\n};\n\nconst deleteTagById=(id)=>{\n  return axios.delete(base_url + \"/tags/remove/\"+id, header);\n}\n\nconst getPdf=(body)=>{\n  return axios.post(base_url+\"/tags/generatepdf/date\",header);\n}\n\nexport default {\n  tagRegister,\n  scanTag,\n  getTagStatusCompleteDetails,\n  getAllRegiteredTagsInACity,\n  getTagStatusForVisitor,\n  deleteTagById,\n  getPdf\n};\n","//import {redirect, useNavigate} from 'react-router-dom'\n//const navigate = useNavigate()\nexport function getAuthToken(){\n    const token = sessionStorage.getItem('token')\n    return token;\n}\n\nexport function getUserType(){\n    const userType = sessionStorage.getItem('userType')\n    return userType;\n}\nexport function getUserId(){\n    const userType = sessionStorage.getItem('userId')\n    return userType;\n}\n\n\n\n\n// export function logout(){\n//     sessionStorage.clear();\n//     return redirect('/')\n// }\n","import React from 'react';\nimport { Row, Col, CardTitle, Button, CardSubtitle } from 'reactstrap';\nimport ComponentCard from '../components/ComponentCard';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst UserDetails = () => {\n  const features = [\n    {\n      title: 'Create React App Based',\n      desc: 'Create React App is a tool that gives you a massive head start when building React apps.',\n      icon: 'bi-vinyl',\n    },\n    {\n      title: 'React Hooks',\n      desc: 'Hooks are functions that let you “hook into” React state and lifecycle features from function components.',\n      icon: 'bi-umbrella',\n    },\n    {\n      title: 'CASL',\n      desc: 'It is isomorphic authorization JavaScript library which restricts what resources a given client is allowed to access.',\n      icon: 'bi-lock',\n    },\n    {\n      title: 'Dark & Light Layouts',\n      desc: 'This theme comes with built-in light & dark layouts, select as per your preference.',\n      icon: 'bi-brightness-high',\n    },\n    {\n      title: 'Built-in Customizer',\n      desc: 'Built-in customizer enables users to change their admin panel look & feel based on their preferences.',\n      icon: 'bi-gear',\n    },\n    {\n      title: 'Well Crafted Apps',\n      desc: 'Creative & smart well crafted apps like email, chat, todo & calender allows you to create your apps faster.',\n      icon: 'bi-star',\n    },\n    {\n      title: 'Clean & Modern Design',\n      desc: 'Beautifully crafted, clean & modern designed admin theme with 5 different demos & light - dark versions.',\n      icon: 'bi-brush',\n    },\n    {\n      title: 'Easy Navigation',\n      desc: 'Carefully crafted, clean, smart & easy theme navigation with collapsible option.',\n      icon: 'bi-segmented-nav',\n    },\n    {\n      title: 'No jQuery Dependency',\n      desc: 'jQuery is great JS library, But Its not a great idea to use jQuery and React in the same UI.',\n      icon: 'bi-shield-check',\n    },\n    {\n      title: 'Colors Options',\n      desc: 'Unlimited color options allows you to set your application color as per your branding.',\n      icon: 'bi-droplet-half',\n    },\n    {\n      title: 'Code Splitting',\n      desc: 'To avoid winding up with a large bundle, it’s good to get ahead of the problem and use \"Code Splitting\".',\n      icon: 'bi-file-code',\n    },\n    {\n      title: 'Lazy Loading',\n      desc: 'Its more efficient to split each routes components into a separate chunk, and only load them when the route is visited.',\n      icon: 'bi-arrow-clockwise',\n    },\n    {\n      title: 'Continuous Updates',\n      desc: 'Regular updates with new demos and features is guaranteed',\n      icon: 'bi-bag-check',\n    },\n    {\n      title: 'Quality Code',\n      desc: 'We follow the best industry code structure that all developers will be able to pick up easily and fall in love',\n      icon: 'bi-stars',\n    },\n    {\n      title: 'Support',\n      desc: 'Premium customer support from the actual people who have created.',\n      icon: 'bi-person-check',\n    },\n  ];\n  const navigate = useNavigate()\n  return (\n    <Row>\n    <Col sm=\"6\" lg=\"6\">\n    <ComponentCard\n        title=\"Create New User\"\n        // subtitle={\n        //   <p>\n        //     5 premium and highly customizable demo variations included in the package, with React\n        //     Router 6, Redux Toolkit, Axios nd much more...\n        //   </p>\n        // }\n      >\n\n        <Row>\n          <Col lg=\"8\">\n            <div className=\"mt-3\">\n              <Button\n                color=\"primary\"\n                onClick={()=>navigate('/users/createUser')}\n              >\n                Create User\n              </Button>\n            </div>\n          </Col>\n          \n        </Row>\n      </ComponentCard>\n    </Col>\n    <Col sm=\"6\" lg=\"6\">\n    <ComponentCard\n        title=\"User Details\"\n        // subtitle={\n        //   <p>\n        //     5 premium and highly customizable demo variations included in the package, with React\n        //     Router 6, Redux Toolkit, Axios nd much more...\n        //   </p>\n        // }\n      >\n\n        <Row>\n          <Col lg=\"8\">\n            <div className=\"mt-3\">\n              <Button\n                color=\"primary\"\n                onClick={()=>navigate('/users/details')}\n              >\n               List of Users\n              </Button>\n            </div>\n          </Col>\n          \n        </Row>\n      </ComponentCard>\n    </Col>\n   \n    </Row>\n  );\n};\n\nexport default UserDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, CardTitle, Button, CardSubtitle } from \"reactstrap\";\nimport ComponentCard from \"../components/ComponentCard\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport dayjs from \"dayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport tagServices from \"../services/tagServices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { tagAction } from \"../store/tagSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport moment from \"moment\";\nconst TagDetails = () => {\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [selectedDate, setSelectedDate] = useState(dayjs());\n  const [city, setCity] = useState();\n  const citChangeHandler = (e) => {\n    setCity(e.target.value);\n  };\n\n  const disableDates = (date) => {\n    const nDate = new Date(date);\n\n    // Disable future dates\n    const today = new Date();\n    if (nDate > today) return true;\n\n    // Disable Sundays\n    //if (nDate.getDay() === 0) return true;\n\n    // Allow only the past 3 days\n    const pastDate = new Date();\n    pastDate.setDate(pastDate.getDate() - 60);\n    if (nDate < pastDate) return true;\n\n    return false;\n  };\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n  const today = dayjs();\n\n  const tagListHandler = () => {\n    //console.log(\"!!\",selectedDate,city)\n    const date = new Date(selectedDate).toLocaleDateString();\n    const formattedDate =dayjs(selectedDate).format('D/M/YYYY')\n\n    const data = {\n      city,\n      date: formattedDate,\n    };\n    //console.log(\"!!\",data)\n    dispatch(tagAction.setTagDetailsRequiredDetails(data));\n    navigate(\"/tags/completeDetail\");\n  };\n\n  const registeredTagHandler = () => {\n    navigate(\"/tags/registeredInCity/\" + city);\n  };\n\n  return (\n    <Row>\n      <Col sm=\"6\" lg=\"6\">\n        <ComponentCard\n          title=\"Live Status\"\n          // subtitle={\n          //   <p>\n          //     5 premium and highly customizable demo variations included in the package, with React\n          //     Router 6, Redux Toolkit, Axios nd much more...\n          //   </p>\n          // }\n        >\n          <Grid container spacing={1}>\n            <Grid item xs={6}>\n              <FormControl sx={{ marginBottom: 1, minWidth: \"100%\" }}>\n                <InputLabel id=\"demo-simple-select-autowidth-label\">\n                  City\n                </InputLabel>\n                <Select\n                  required\n                  labelId=\"city\"\n                  id=\"city\"\n                  value={city}\n                  onChange={citChangeHandler}\n                  autoWidth\n                  label=\"City\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value=\"Ellenabad\">Ellenabad</MenuItem>\n                  <MenuItem value=\"Hisar\">Hisar</MenuItem>\n                  <MenuItem value=\"Sirsa\">Sirsa</MenuItem>\n                  <MenuItem value=\"Delhi\">Delhi</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <DatePicker\n                value={selectedDate}\n                onChange={handleDateChange}\n                renderInput={(props) => <TextField {...props} />}\n                disableFuture\n                shouldDisableDate={disableDates}\n                //inputFormat=\"D/M/YYYY\"\n              />\n            </LocalizationProvider>\n          </Grid>\n          <Row>\n            <Col lg=\"8\">\n              <div className=\"mt-3\">\n                <Button color=\"primary\" onClick={tagListHandler}>\n                  Tag List\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </ComponentCard>\n      </Col>\n      <Col sm=\"6\" lg=\"6\">\n        <ComponentCard title=\"All Registered Tags\">\n          <Row>\n            <Row>\n              <Col>\n                <Grid container spacing={1}>\n                  <Grid item xs={6}>\n                    <FormControl sx={{ marginBottom: 1, minWidth: \"100%\" }}>\n                      <InputLabel id=\"demo-simple-select-autowidth-label\">\n                        City\n                      </InputLabel>\n                      <Select\n                        required\n                        labelId=\"city\"\n                        id=\"city\"\n                        value={city}\n                        onChange={citChangeHandler}\n                        autoWidth\n                        label=\"City\"\n                      >\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n                        <MenuItem value=\"Ellenabad\">Ellenabad</MenuItem>\n                        <MenuItem value=\"Hisar\">Hisar</MenuItem>\n                        <MenuItem value=\"Sirsa\">Sirsa</MenuItem>\n                        <MenuItem value=\"Delhi\">Delhi</MenuItem>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n              </Col>\n            </Row>\n            <Row>\n              <Col lg=\"8\">\n                <div className=\"mt-3\">\n                  <Button color=\"primary\" onClick={registeredTagHandler}>\n                    List of Registered Tags\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Row>\n        </ComponentCard>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TagDetails;\n","import axios from \"axios\";\n\nimport { getAuthToken } from \"./common\";\n\nconst token = getAuthToken();\n\nconst header = {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n    token: token,\n  },\n};\n\nconst base_url = \"http://13.234.104.94\";\n//const base_url = \"https://nfc-backend-compass-5b3f.vercel.app\";\n//const base_url = \"https://accessservices.site\";\n\nconst createUser = (body) => {\n  return axios.post(base_url + \"/createUser\", body, header);\n};\n\n//list of all users\nconst getListOfUsers = () => {\n  return axios.get(base_url + \"/users\", header);\n};\n\n//delete a user\nconst deleteUser = (userId) => {\n  return axios.delete(base_url + \"/users/\"+userId, header);\n};\n\n//get cities of an user\n\nexport default {\n  createUser,\n  getListOfUsers,\n  deleteUser,\n};\n","import React, { useState } from \"react\";\nimport userServices from \"../services/userServices\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Box,\n  Grid,\n} from \"@material-ui/core\";\nimport ComponentCard from \"./ComponentCard\";\nimport {} from '../services/common'\nimport Swal from \"sweetalert2\";\nconst cities = ['Ellenabad','Hisar','Sirsa','Pune','Delhi']; // Replace with your city options\n\nconst CreateUser = () => {\n  const [name, setName] = useState(\"\");\n  const [adhaarNumber, setAadhaarNumber] = useState(\"\");\n  const [firmName, setFirmName] = useState(\"\");\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [userType, setUserType] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAadhaarNumberChange = (e) => {\n    setAadhaarNumber(e.target.value);\n  };\n\n  const handleFirmNameChange = (e) => {\n    setFirmName(e.target.value);\n  };\n\n  const handleCityChange = (e) => {\n    setSelectedCities(e.target.value);\n  };\n\n  const handlePhoneNumberChange = (e) => {\n    setPhoneNumber(e.target.value);\n  };\n\n  const handleUserTypeChange = (e) => {\n    setUserType(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    \n   e.preventDefault(); // Perform form submission or validation logic here // You can access the form values using the state variables (name, adhaarNumber, firmName, selectedCities, phoneNumber, userType)\n    // console.log(\"Form submitted:\", {\n    //   name,\n    //   adhaarNumber,\n    //   firmName,\n    //   selectedCities,\n    //   phoneNumber,\n    //   userType,\n    // });\n    const formBody={\n      name,\n      adhaarNumber,\n      firmName,\n      selectedCities,\n      phoneNumber,\n      userType,\n    }\n   \n      userServices.createUser(formBody).then((res)=>{\n        console.log(res)\n        Swal.fire({\n          icon: \"success\",\n          title: res.data.message,\n          text:  \"user Id: \"+res.data.userId+\"-----\"+\"Password: \"+res.data.password\n        });\n      }).catch((err)=>\n      //console.log(err.response.data)\n      Swal.fire(\"Adhar/Phone not valid\")\n      )\n  };\n\n  return (\n    <ComponentCard title=\"User Details\">\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={1}>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Name\"\n              value={name}\n              onChange={handleNameChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Aadhaar Number\"\n              value={adhaarNumber}\n              onChange={handleAadhaarNumberChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Firm Name\"\n              value={firmName}\n              onChange={handleFirmNameChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl fullWidth required>\n              <InputLabel>City</InputLabel>\n              <Select\n                multiple\n                value={selectedCities}\n                onChange={handleCityChange}\n                renderValue={(selected) => selected.join(\", \")}\n              >\n                           \n                {cities.map((city) => (\n                  <MenuItem key={city} value={city}>\n                                   {city}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Phone Number\"\n              value={phoneNumber}\n              onChange={handlePhoneNumberChange}\n              required\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl fullWidth required>\n              <InputLabel fullWidth>User Type</InputLabel>\n              <Select value={userType} onChange={handleUserTypeChange}>\n                <MenuItem value=\"admin\">Admin</MenuItem>\n                <MenuItem value=\"tagger\">Tagger</MenuItem>\n                <MenuItem value=\"scanner\">Scanner</MenuItem>\n                <MenuItem value=\"visitor\">Visitor</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                       Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ComponentCard>\n  );\n};\n\nexport default CreateUser;\n","import { Col, Row } from \"reactstrap\";\nimport { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport IconButton from \"@mui/material/IconButton\";\n//import DeleteIcon from '@mui/icons-material/Delete';\nimport ProjectTables from \"./dashboard/ProjectTable\";\nimport { useEffect, useState } from \"react\";\nimport userServices from \"../services/userServices\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport user1 from \"../assets/images/users/user1.jpg\";\nimport user2 from \"../assets/images/users/user2.jpg\";\nimport user3 from \"../assets/images/users/user3.jpg\";\nimport user4 from \"../assets/images/users/user4.jpg\";\nimport user5 from \"../assets/images/users/user5.jpg\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst tableData = [\n  {\n    avatar: user1,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user2,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Lading pro React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user3,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Elite React\",\n    status: \"holt\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user4,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Flexy React\",\n    status: \"pending\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n  {\n    avatar: user5,\n    name: \"Hanna Gover\",\n    email: \"hgover@gmail.com\",\n    project: \"Ample React\",\n    status: \"done\",\n    weeks: \"35\",\n    budget: \"95K\",\n  },\n];\n\nconst UserListDetails = () => {\n  const navigate = useNavigate();\n  const [userDetails, setUserDetails] = useState();\n  useEffect(() => {\n    userServices\n      .getListOfUsers()\n      .then((res) => {\n        console.log(res.data);\n        //res.data.map((item)=>console.log(item))\n        setUserDetails(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const deleteHandler = (data) => () => {\n    console.log(\"HI\");\n    //sadmin can't be deleted\n    if (data === \"sadmin\") {\n      Swal.fire({\n        icon: \"warn\",\n        title: \"Sorry\",\n      });\n    } else {\n      console.log(data);\n      userServices\n        .deleteUser(data)\n        .then((res) => {\n          Swal.fire({\n            icon: \"success\",\n            title: res.data.message,\n            //text:  \"SS\"\n          }).then(() => {\n            userServices\n              .getListOfUsers()\n              .then((res) => {\n                console.log(res.data);\n                //res.data.map((item)=>console.log(item))\n                setUserDetails(res.data);\n              })\n              .catch((err) => console.log(err));\n          });\n          console.log(res);\n        })\n        .catch((err) => alert(err));\n    }\n  };\n\n  return (\n    <>\n      <Row>\n        <Col lg=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle tag=\"h5\">Registered User Listing</CardTitle>\n              <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n                {/* Overview of the projects */}\n              </CardSubtitle>\n\n              <Table\n                className=\"no-wrap mt-3 align-middle\"\n                responsive\n                borderless\n              >\n                <thead>\n                  <tr>\n                    <th>User</th>\n                    <th>Id</th>\n                    <th>Firm</th>\n                    <th>Phone No.</th>\n                    <th>Adhaar</th>\n                    <th>City</th>\n                    <th>Password</th>\n                    <th>Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {userDetails?.map((tdata, index) => (\n                    tdata.userType !== \"superAdmin\" && <tr key={index} className=\"border-top\">\n                      <td>\n                        <div className=\"d-flex align-items-center p-2\">\n                          {/* <img\n                        src={tdata.avatar}\n                        className=\"rounded-circle\"\n                        alt=\"avatar\"\n                        width=\"45\"\n                        height=\"45\"\n                      /> */}\n                          <div className=\"ms-3\">\n                            <h6 className=\"mb-0\">{tdata.name}</h6>\n                            <span className=\"text-muted\">{tdata.userType}</span>\n                          </div>\n                        </div>\n                      </td>\n                      <td>{tdata.userId}</td>\n                      <td>{tdata.firmName}</td>\n                      <td>{tdata.phoneNumber}</td>\n                      <td>{tdata.adhaarNumber}</td>\n                      <td>{tdata.city}</td>\n                      <td>{tdata.password}</td>\n                      <td>\n                        {\n                          <IconButton\n                            onClick={deleteHandler(tdata.userId)}\n                            aria-label=\"delete\"\n                            // onClick={() => {\n                            //   //sadmin can't be delted\n                            //   console.log(tdata.userId);\n                            // }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        }\n                      </td>\n                      {/* <td>\n                        {tdata.status === \"pending\" ? (\n                          <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                        ) : tdata.status === \"holt\" ? (\n                          <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\n                        ) : (\n                          <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                        )}\n                      </td> */}\n                      {/* <td>{tdata.weeks}</td>\n                      <td>{tdata.budget}</td> */}\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default UserListDetails;\n","import React, { useCallback, useState } from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n  Snackbar,\n} from \"@material-ui/core\";\nimport ComponentCard from \"./ComponentCard\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Alert, Stack } from \"@mui/material\";\nimport Swal from \"sweetalert2\";\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    let formIsValid = true;\n    const newErrors = {};\n\n    if (!email) {\n      formIsValid = false;\n      newErrors.email = \"Email is required\";\n    }\n\n    if (!password) {\n      formIsValid = false;\n      newErrors.password = \"Password is required\";\n    }\n\n    setErrors(newErrors);\n    return formIsValid;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      // Perform login logic here\n      const loginDetails = {\n        userId: email,\n        password,\n      };\n      onLogin(loginDetails);\n      console.log(\"Login successful\");\n    }\n  };\n\n  const onLogin = useCallback(async (details) => {\n    try {\n      const response = await fetch(\n        \n        \"http://13.234.104.94/login\",\n        //\"https://nfc-backend-compass-5b3f.vercel.app\",\n        //\"https://accessservices.site/login\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(details),\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 403 || response.status === 401) {\n        console.log(\"hiii\");\n        Swal.fire({\n          icon: \"error\",\n          title: \"Authentication Error\",\n          text: \"User not found\",\n        });\n        //   <Snackbar  autoHideDuration={6000} >\n        //   <Alert variant=\"outlined\" severity=\"error\">\n        //     This is an error alert — check it out!\n        //   </Alert>\n        //  </Snackbar>\n      }\n      if (response.status === 200) {\n        const data = await response.json();\n        console.log(data);\n       // const token = data.jsonContent;\n        sessionStorage.setItem(\"token\", data.token);\n        sessionStorage.setItem('userId',data.userId);\n        sessionStorage.setItem('userType', data.userType);\n        sessionStorage.setItem('userCity', data.city);\n        navigate(\"/starter\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <ComponentCard>\n      <Container maxWidth=\"sm\">\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                Login\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Email\"\n                //type=\"email\"\n                fullWidth\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                error={!!errors.email}\n                helperText={errors.email}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Password\"\n                type=\"password\"\n                fullWidth\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                error={!!errors.password}\n                helperText={errors.password}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n              >\n                Log In\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </ComponentCard>\n  );\n};\n\nexport default Login;\n","import { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport tagServices from \"../services/tagServices\";\nimport ComponentCard2 from \"./ComponentCard2\";\nimport Box from \"@mui/material/Box\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n  Table,\n  Button,\n} from \"reactstrap\";\nimport Swal from \"sweetalert2\";\nimport IconButton from \"@mui/material/IconButton\";\n//import DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport { useReactToPrint } from \"react-to-pdf\";\nimport GetPdf from \"./GetPdf\";\nconst TagDetailsList = (props) => {\n  const [tableData, setTableData] = useState();\n  const body = useSelector((state) => state.tagDetails.tagListRequiredDetails);\n  const currentDate = new Date();\n  const day = currentDate.getDate();\n  const month = currentDate.getMonth() + 1; // Months are zero-based\n  const year = currentDate.getFullYear();\n\n  // Format the date as D/M/YYYY\n  const formattedDate = day + \"/\" + month + \"/\" + year;\n\n  //console.log(formattedDate);\n  const navigate = useNavigate();\n  const tableRef = useRef();\n  useEffect(() => {\n    console.log(body);\n    tagServices\n      .getTagStatusCompleteDetails(body)\n      .then((res) => {\n        console.log(res);\n        if (res.status === 404) alert(res.message);\n        else setTableData(res.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error\",\n          text: err.response.data.message,\n        }).then(() => navigate(-1));\n      });\n  }, [body]);\n\n  const scanHandler = (data) => {\n    console.log(data);\n    tagServices\n      .scanTag(data)\n      .then((res) => {\n        console.log(res.data);\n        Swal.fire({\n          icon:\n            res.data.message === \"Already Scanned Today\" ? \"info\" : \"success\",\n          title: \"success\",\n          text: res.data.message,\n        }).then(() => {\n          tagServices\n            .getTagStatusCompleteDetails(body)\n            .then((res) => {\n              console.log(res);\n              if (res.status === 404) alert(res.message);\n              else setTableData(res.data);\n            })\n            .catch((err) => {\n              console.log(err.response.data);\n              Swal.fire({\n                icon: \"error\",\n                title: \"Error\",\n                text: err.response.data.message,\n              }).then(() => navigate(-1));\n            });\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  // const pdfHandler=useReactToPrint({\n  //   content:()=>tableRef.current,\n  //   documentTitle: \"User Data\",\n  //   onAfterprint:()=>alert(\"Data saved\")\n  // })\n\n  const handleDownload = () => {\n    tagServices\n      .getPdf(body)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <>\n      <ComponentCard2>\n        <Card>\n          {/* <button onClick={}>Generate pdf</button> */}\n          <Card>\n            {/* <GetPdf></GetPdf> */}\n            <Button color=\"primary\" onClick={handleDownload}>\n              Get PDF\n            </Button>\n          </Card>\n\n          <CardBody>\n            <CardTitle tag=\"h5\">Status Report</CardTitle>\n            <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n              {/* Overview of the projects */}\n            </CardSubtitle>\n\n            <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n              <thead>\n                <tr>\n                  <th>House Detail</th>\n                  <th>Locality</th>\n                  <th>City</th>\n                  <th>Status</th>\n                  <th>Time</th>\n                  <th>Scanned By</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {tableData?.map((tdata, index) => (\n                  <tr key={index} className=\"border-top\">\n                    <td>\n                      <div className=\"d-flex align-items-center p-2\">\n                        {/* <img\n                        src={tdata.avatar}\n                        className=\"rounded-circle\"\n                        alt=\"avatar\"\n                        width=\"45\"\n                        height=\"45\"\n                      /> */}\n                        <div className=\"ms-3\">\n                          <h6 className=\"mb-0\">{tdata.name}</h6>\n                          <span className=\"text-muted\">{tdata.houseNo}</span>\n                        </div>\n                      </div>\n                    </td>\n                    <td>{tdata.locality}</td>\n                    <td>{tdata.city}</td>\n                    <td>\n                      {tdata.scanned === false ? (\n                        <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                      ) : (\n                        <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                      )}\n                    </td>\n                    <td>{tdata.time}</td>\n                    <td>{tdata.userId}</td>\n                    <td>\n                      {\n                        <IconButton\n                          //onClick={deleteHandler}\n                          aria-label=\"delete\"\n                          disabled={body.date !== formattedDate}\n                          // onClick={() => {\n\n                          //   console.log(tdata.tagId);\n                          // }}\n                          onClick={() => scanHandler(tdata.tagId)}\n                        >\n                          <DoneAllIcon></DoneAllIcon>\n                        </IconButton>\n                      }\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </CardBody>\n        </Card>\n      </ComponentCard2>\n    </>\n  );\n};\n\nexport default TagDetailsList;\n","import {\r\n  PDFViewer,\r\n  PDFDownloadLink,\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  BlobProvider\r\n} from \"@react-pdf/renderer\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { Button } from \"reactstrap\";\r\nimport ReactDOM from 'react-dom'; \r\nconst styles = StyleSheet.create({\r\n  heading: {\r\n    fontSize: 25,\r\n    textAlign: \"center\",\r\n    marginTop: \"1%\",\r\n    marginBottom: \"1%\",\r\n  },\r\n  table: {\r\n    display: \"table\",\r\n    width: \"80%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    //borderRightWidth: 1,\r\n    //borderBottomWidth: 1\r\n  },\r\n  tableRow: {\r\n    margin: \"auto\",\r\n    flexDirection: \"row\",\r\n  },\r\n  tableCol: {\r\n    width: \"25%\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    //borderLeftWidth: 1,\r\n    //borderTopWidth: 1\r\n  },\r\n  tableCell: {\r\n    margin: \"auto\",\r\n    marginTop: 10,\r\n    fontSize: 10,\r\n  },\r\n});\r\n\r\nconst populatePdf = () => {\r\n  <Document>\r\n    <Page style={styles.body}>\r\n      <Text style={styles.heading}>dfdsfs</Text>\r\n      <View style={styles.table}>\r\n        <View style={styles.tableRow}>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>S.No</Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>House Details</Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>Address</Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>Time & date</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.tableRow}>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>React-PDF</Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>3 User </Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>2019-02-20 - 2020-02-19</Text>\r\n          </View>\r\n          <View style={styles.tableCol}>\r\n            <Text style={styles.tableCell}>5€</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Page>\r\n  </Document>;\r\n};\r\n\r\nconst GetPdf = () => {\r\n  const handleDownload = async () => {\r\n    //const pdfBlob = await populatePdf.toBlob();\r\n    const pdfBlob = await new Promise((res)=>{\r\n      const blobProvider = (\r\n        <BlobProvider document={<populatePdf></populatePdf>}></BlobProvider>\r\n      );\r\n      //ReactDOM.render(blobProvider,document.createElement('div'))\r\n      saveAs(populatePdf,\"today.pdf\")\r\n    })\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <button onClick={handleDownload}></button> */}\r\n      <Button color=\"primary\" onClick={handleDownload}>\r\n                  Get PDF\r\n                </Button>\r\n      <PDFDownloadLink document={<populatePdf></populatePdf>}></PDFDownloadLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetPdf;\r\n","import { useEffect, useState } from \"react\";\nimport tagServices from \"../services/tagServices\";\nimport { useParams } from \"react-router-dom\";\nimport ComponentCard from \"./ComponentCard\";\nimport ComponentCard2 from \"./ComponentCard2\";\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport IconButton from \"@mui/material/IconButton\";\n//import DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\n\nimport { Card, CardBody, CardTitle, CardSubtitle, Table } from \"reactstrap\";\nimport Swal from \"sweetalert2\";\n\nconst RegisteredTagsDetails = () => {\n  const params = useParams();\n  const [tableData, setTableData] = useState();\n  useEffect(() => {\n    const city = params.city;\n    tagServices\n      .getAllRegiteredTagsInACity(city)\n      .then((res) => {\n        console.log(res.data);\n        setTableData(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  //   const columns=[\n  //     {\n  //         field: 'House Details',\n  //         headerName: 'Last name',\n  //         width: 150,\n  //         editable: true,\n  //       },\n  //     //   {\n  //     //     field: 'Locality',\n  //     //     headerName: 'Last name',\n  //     //     width: 150,\n  //     //     editable: true,\n  //     //   },\n  //     //   {\n  //     //     field: 'City',\n  //     //     headerName: 'Last name',\n  //     //     width: 150,\n  //     //     editable: true,\n  //     //   },\n  //       {\n  //         field: 'Phone No.',\n  //         headerName: 'Last name',\n  //         width: 150,\n  //         editable: true,\n  //       },\n  //       {\n  //         field: 'Registerd By',\n  //         headerName: 'Last name',\n  //         width: 150,\n  //         editable: true,\n  //       },\n  //       {\n  //         field: 'Date & Time',\n  //         headerName: 'Last name',\n  //         width: 150,\n  //         editable: true,\n  //       },\n  //   ]\n\n  const deleteHandler = (id) => {\n    console.log(id)\n    tagServices.deleteTagById(id).then((res) => {\n      console.log(res.data)\n      Swal.fire({\n        icon: \"success\",\n        title: res.data.message,\n        //text:  \"SS\"\n      }).then(() => {\n        tagServices\n        .getAllRegiteredTagsInACity(params.city)\n        .then((res) => {\n          console.log(res.data);\n          setTableData(res.data);\n        })\n        .catch((err) => console.log(err));\n      });\n    }).catch((err) => { console.log(err) })\n  }\n  return (\n    <>\n      <Card>\n        <CardBody>\n          <CardTitle tag=\"h5\">Registered Tags in {params.city}</CardTitle>\n          {/* <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n            Overview of the projects\n          </CardSubtitle> */}\n\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\n            <thead>\n              <tr>\n                <th>House Details</th>\n                <th>Phone No.</th>\n                <th>Registered By</th>\n                <th>Date & Time</th>\n                <th>Action</th>\n                {/* <th>Weeks</th>\n                <th>Weeks</th>\n                <th>Budget</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData?.map((tdata, index) => (\n                <tr key={index} className=\"border-top\">\n                  <td>\n                    <div className=\"d-flex align-items-center p-2\">\n                      <div className=\"ms-3\">\n                        <h6 className=\"mb-0\">{tdata.houseNo}</h6>\n                        <span className=\"text-muted\">{tdata.name + \", \"}</span>\n                        <span className=\"text-muted\">{tdata.locality}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>{tdata.phoneNo}</td>\n                  <td>{tdata.userId}</td>\n\n                  {/* <td>\n                    {tdata.status === \"pending\" ? (\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\"></span>\n                    ) : tdata.status === \"holt\" ? (\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\"></span>\n                    ) : (\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\"></span>\n                    )}\n                  </td> */}\n                  <td>\n                    <div className=\"d-flex align-items-center p-2\">\n                      <div className=\"ms-3\">\n                        <h6 className=\"mb-0\">{tdata.registryDateTime.split(\"T\")[0]}</h6>\n                        <span className=\"text-muted\">{tdata.registryDateTime.split(\"T\")[1]}</span>\n                      </div>\n                    </div>\n                  </td>\n                  <td>\n                    {\n                      <IconButton\n                        //onClick={deleteHandler}\n                        aria-label=\"delete\"\n                        //disabled ={body.date !== formattedDate}\n                        // onClick={() => {\n\n                        //   console.log(tdata.tagId);\n                        // }}\n                        onClick={() => deleteHandler(tdata._id)}\n                      >\n                        <DeleteForeverIcon></DeleteForeverIcon>\n\n                      </IconButton>\n                    }\n                  </td>\n                  {/* <td>{tdata.registryDateTime.split(\"T\")[0]}</td> */}\n                  {/* <td>{tdata.budget}</td> */}\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\nexport default RegisteredTagsDetails;\n\n// \"_id\": \"646f2af2978434d1384260be\",\n//         \"name\": \"dsfs\",\n//         \"houseNo\": \"asda\",\n//         \"locality\": \"ds\",\n//         \"city\": \"Hisar\",\n//         \"state\": \"dasdf\",\n//         \"pincode\": 0,\n//         \"phoneNo\": 23424,\n//         \"tagId\": \"102\",\n//         \"userId\": \"default\",\n//         \"registryDateTime\": \"2023-06-01T09:08:51.077Z\",\n//         \"__v\": 0\n","// versi \"react-qr-reader\" 1.0.0. component API harus disesuaikan dengan yg baru\n\nimport \"./scanQr.css\";\nimport { useState } from \"react\";\nimport QrReader from \"modern-react-qr-reader\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserType } from \"../services/common\";\n\nconst ScanQr = () => {\n    const navigate = useNavigate()\n    const [selected, setSelected] = useState(\"environment\");\n    const [startScan, setStartScan] = useState(true);\n    const [loadingScan, setLoadingScan] = useState(false);\n    const [tagId, setTagId] = useState();\n    const [show, setShow] = useState(true);\n    const userType = getUserType();\n    const handleScan = async (scanData) => {\n        setLoadingScan(true);\n        console.log(`loaded data data`, scanData, typeof scanData);\n        if (scanData && scanData !== \"\") {\n            console.log(`loaded >>>`, scanData);\n            setTagId(scanData);\n            setStartScan(false);\n            setLoadingScan(false);\n\n            // setPrecScan(scanData);\n        }\n    };\n    const handleError = (err) => {\n        console.error(err);\n    };\n\n    const handleClose = () => {\n        setShow(false);\n        navigate(\"/starter\");\n    };\n\n    return (\n        <>\n            {/* <div className=\"ScanQr\"> */}\n            <Modal show={show} onHide={handleClose} size=\"sm\" scrollable={true}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Scan Tag</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {/* <h2>{message}</h2> */}\n                    {startScan && (\n                        <>\n\n                            <QrReader\n                                //  onResult={(result, error) => {\n                                //     console.log(result,error)\n                                //   }}\n                                facingMode=\"environment\"\n                                delay={500}\n                                onError={handleError}\n                                onScan={handleScan}\n                            // chooseDeviceId={()=>selected}\n                            //style={{ width: \"300px\" }}\n                            />\n                        </>\n                    )}\n                    {loadingScan && <p>Loading</p>}\n                    {tagId !== \"\" && <p>{tagId}</p>}\n                </Modal.Body>\n                {/* <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer> */}\n            </Modal>\n            {\n                !loadingScan ? (\n                    <>\n                        {userType === \"scanner\" && navigate(\"/tags/scan/\" + tagId)}\n                        {userType === \"tagger\" && navigate(\"/tags/register/\" + tagId)}\n                        {userType === \"admin\" && navigate(\"/tags/register/\" + tagId)}\n                        {userType === \"superAdmin\" && navigate(\"/tags/register/\" + tagId)}\n                    </>\n                ) :\n                    <p>Loading...</p>\n            }\n            {/* </div> */}\n        </>\n    );\n};\n\nexport default ScanQr;\n","import { lazy } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport UserDetails from \"../views/UserDetails.js\";\nimport TagDetails from \"../views/TagDetails.js\";\nimport TagRegister from \"../components/TagRegister.js\";\nimport CreateUser from \"../components/CreateUser.js\";\nimport UserListDetails from \"../components/UserListDetails.js\";\nimport ScanDone from \"../components/ScanDone.js\";\nimport Login from \"../components/Login.js\";\nimport TagDetailsList from \"../components/TagDetailsList.js\";\nimport { getUserType } from \"../services/common.js\";\nimport RegisteredTagsDetails from \"../components/RegisteredTagsDetails.js\";\nimport ScanQr from \"../components/ScanQr.js\";\n/****Layouts*****/\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout.js\"));\n\n/***** Pages ****/\n\nconst Starter = lazy(() => import(\"../views/Starter.js\"));\nconst About = lazy(() => import(\"../views/About.js\"));\nconst Alerts = lazy(() => import(\"../views/ui/Alerts\"));\nconst Badges = lazy(() => import(\"../views/ui/Badges\"));\nconst Buttons = lazy(() => import(\"../views/ui/Buttons\"));\nconst Cards = lazy(() => import(\"../views/ui/Cards\"));\nconst Grid = lazy(() => import(\"../views/ui/Grid\"));\nconst Tables = lazy(() => import(\"../views/ui/Tables\"));\nconst Forms = lazy(() => import(\"../views/ui/Forms\"));\nconst Breadcrumbs = lazy(() => import(\"../views/ui/Breadcrumbs\"));\n\n/*****Routes******/\nconst userType = getUserType();\nconst ThemeRoutes = [\n  {\n    path: \"/\",\n    element: <Login></Login>,\n  },\n  {\n    path: \"logout\",\n    element: <Login></Login>,\n    //action:\n  },\n  {\n    path: \"/\",\n    element: <FullLayout />,\n    children: [\n      //{ path: \"/\", element: <Navigate to=\"/starter\" /> },\n      { path: \"/starter\", exact: true, element: <Starter /> },\n      { path: \"/about\", exact: true, element: <About /> },\n      (userType === \"admin\" || userType === \"superAdmin\") && {\n        path: \"/users\",\n        exact: true,\n        children: [\n          { path: \"\", exact: true, element: <UserDetails /> },\n          {\n            path: \"createUser\",\n            exact: true,\n            element: <CreateUser></CreateUser>,\n          },\n          {\n            path: \"details\",\n            exact: true,\n            element: <UserListDetails></UserListDetails>,\n          },\n        ],\n      },\n\n      (userType === \"admin\" ||\n        userType === \"superAdmin\" ||\n        userType === \"tagger\" ||\n        userType === \"scanner\") && {\n        path: \"/tags\",\n        exact: true,\n        children: [\n          { path: \"\", element: <TagDetails /> },\n          {path:\"scanQr\",element:<ScanQr></ScanQr>},\n          { path: \"scan/:tagId\", exact: true, element: <ScanDone /> },\n          { path: \"register/:tagId\", exact: true, element: <TagRegister /> },\n          { path: \"register/:tagId\", exact: true, element: <TagRegister /> },\n          { path: \"registeredInCity/:city\", exact: true, element: <RegisteredTagsDetails /> },\n          {\n            path: \"completeDetail\",\n            exact: true,\n            element: <TagDetailsList></TagDetailsList>,\n          },\n        ],\n      },\n      // { path: \"/alerts\", exact: true, element: <Alerts /> },\n      // { path: \"/badges\", exact: true, element: <Badges /> },\n      // { path: \"/buttons\", exact: true, element: <Buttons /> },\n      // { path: \"/cards\", exact: true, element: <Cards /> },\n      // { path: \"/grid\", exact: true, element: <Grid /> },\n      // { path: \"/table\", exact: true, element: <Tables /> },\n      // { path: \"/forms\", exact: true, element: <Forms /> },\n      // { path: \"/breadcrumbs\", exact: true, element: <Breadcrumbs /> },\n    ],\n  },\n];\n\nexport default ThemeRoutes;\n","import { useRoutes } from \"react-router-dom\";\nimport Themeroutes from \"./routes/Router\";\n\nconst App = () => {\n  const routing = useRoutes(Themeroutes);\n\n  return <div className=\"dark\">{routing}</div>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport \"./loader.scss\";\nimport { Spinner } from \"reactstrap\";\n\nconst Loader = () => (\n  <div className=\"fallback-spinner\">\n    <div className=\"loading\">\n      <Spinner color=\"primary\" />\n    </div>\n  </div>\n);\nexport default Loader;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\n//import createReportReducer from './createReportSlice'\nimport tagReducer from './tagSlice'\n\nconst store = configureStore({\n  reducer: { \n \n    //createReportDetails: createReportReducer,\n    tagDetails:tagReducer,\n   \n     },\n});\n\nexport default store;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport Loader from \"./layouts/loader/Loader\";\nimport { Provider } from \"react-redux\";\nimport store from '../src/store/index'\nReactDOM.render(\n  <Suspense fallback={<Loader />}>\n    <HashRouter basename=\"/\">\n    <Provider store={store}>\n      <App />\n      </Provider>\n    </HashRouter>\n  </Suspense>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}